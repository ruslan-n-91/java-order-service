plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
//    id "de.undercouch.download" version "5.6.0"
//    id "org.openapi.generator" version "7.13.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

ext {
    mapstructVersion = "1.6.3"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

//openApiGenerate {
//    generatorName = "java"
//    inputSpec = "${projectDir}/src/main/resources/openapi/openapi.json"
//    outputDir = "${layout.buildDirectory.get()}/generated"
//    apiPackage = "com.example.client.api"
//    modelPackage = "com.example.client.model"
//    configOptions = [
//            java8: "true",
//            dateLibrary: "java8",
//            library: "restclient",
//            useJakartaEe: "true"
//    ]
//}
//
//sourceSets.main.java.srcDirs += ["${layout.buildDirectory.get()}/generated/src/main/java"]

//tasks.register("downloadOpenApiSpec", Download) {
//    src "http://localhost:8256/v3/api-docs"
//    dest "${layout.buildDirectory.get()}/openapi.json"
//    onlyIfModified true
//}
//
//tasks.register("generateOpenApiClient", org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
//    dependsOn downloadOpenApiSpec
//    generatorName = "java"
//    inputSpec = "${layout.buildDirectory.get()}/openapi.json"
//    outputDir = "${layout.buildDirectory.get()}/generated"
//    apiPackage = "com.example.client.api"
//    modelPackage = "com.example.client.model"
//    configOptions = [
//            java8: "true",
//            dateLibrary: "java8",
//            library: "restclient",
//            useJakartaEe: "true"
//    ]
//}
//
//compileJava.dependsOn generateOpenApiClient
//
//sourceSets.main.java.srcDirs += ["${layout.buildDirectory.get()}/generated/src/main/java"]

ext {
    set('springCloudVersion', "2025.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
//    implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
//    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.micrometer:micrometer-tracing'
//    implementation 'io.micrometer:micrometer-tracing-bridge-otel'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.zipkin.brave:brave-context-slf4j'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    runtimeOnly 'org.postgresql:postgresql'

    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
